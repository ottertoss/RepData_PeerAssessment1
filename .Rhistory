q()
install.packages("KernSmooth")
library(KernSmooth)
read.table?
install.packages("KernSmooth")
help()
load("~/DataAnalysis/Ass1/Andy.csv")
pwd
cwd
dir
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir="diet_data")
list.files("diet_data")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
names(andy)
length(andy)
length(andy$Age)
dim(andy)
str(andy)
andy_start <- andy[1, andy$Weight]
andy_start <- andy[1, "Weight"]
andy_end <- andy[30, "Weight"]
andy_loss = andy_start - andy_end
files_full = list.files("diet_data", full.names=TRUE)
dat = data.frame()
for (i in 1:5) { dat <- rbind(dat, read.csv(files_full[i]))}
str(dat)
summary(dat)
median(dat$Weight, na.rm=TRUE)
median(subset(dat, dat$Day = 30), na.rm=TRUE)
dat30 = dat[which(dat[,"Day"] == 30)]
dat30 = dat[which(dat[,"Day"] == 30),]
median(dat30$weight)
median(dat30$Weight)
median(dat30$Weight, na.rm=TRUE)
weightMedian <- function(directory, day) { }
weightMedian <- function(directory, day) { files_list = list.files(directory, full.names=TRUE)
dat = data.frame()
for (i in 1:5)
{}
{
dat = rbind(dat, read.csv(files_list[i]))
}
dat_sub = dat[which(dat[,"Day"] == day),]
median(dat, subset[,"Weight"], na.rm=TRUE)
}
weightMedian(directory = "diet_data", day = 20)
median(dat, subset[,"Weight"], na.rm=TRUE)
median(dat_sub[,"Weight"], na.rm=TRUE)
weightMedian(directory = "diet_data", day = 20)
weightMedian
median(dat_sub[,"Weight"], na.rm=TRUE)
edit weightMedian
function(directory, day) { files_list = list.files(directory, full.names=TRUE)
dat = data.frame()
for (i in 1:5)
{}
{
dat = rbind(dat, read.csv(files_list[i]))
}
dat_sub = dat[which(dat[,"Day"] == day),]
median(dat_sub[,"Weight"], na.rm=TRUE)
}
weightMedian(directory = "diet_data", day = 20)
weightMedian
weightMedian = function(directory, day) { files_list = list.files(directory, full.names=TRUE)
dat = data.frame()
for (i in 1:5)
{}
{
dat = rbind(dat, read.csv(files_list[i]))
}
dat_sub = dat[which(dat[,"Day"] == day),]
median(dat_sub[,"Weight"], na.rm=TRUE)
}
weightMedian(directory = "diet_data", day = 20)
weightMedian(directory = "diet_data", day = 4)
weightMedian(directory = "diet_data", day = 17)
library(MASS)
painters
painters$school
painters$School
help(painters)
boxplot = table(painters$school)
boxplot(table(painters$school))
histogram(table(painters$school))
hist(table(painters$school))
hist(table(painters$school), breaks=20)
school = painters$school
school.frequency = table(school)
school.frequency
school = painters$School
school.frequency = table(school)
school.frequency
cbind(school.frequency)
table(painters$Composition)
cbind(table(painters$Composition))
school
table(school)
max(table(school))
help(table)
max(table(school, row.names))
max(table(school, row.names = c("A","B","C","D","E","F","G","H")))
max(table(school))
school[which(max(table(school)))]
school[max(table(school)]
school(max(table(school))
p
school(max(table(school))
d
names(school)
summary(school)
painters[max(table(painters$School))]
painters[painters, max(table(painters$School))]
painters[, max(table(painters$School))]
painters(max(table(painters$School)))
painters[which(max(table(painters$School)),]
painters[which(painters[, painters$School] == max(table(painters$School)),]
max(table(painters$School)
l
max(table(painters$School))
which.max(table(painters$School))
max(table(painters$School))
which.max(table(painters$School))
help(max)
which.pmax(table(painters$School))
which.max(table(painters$School))
length(painters)
row(painters)
dim(painters)
row.max(painters)
row(painters)
rbind(painters)
nrow(painters)
table(painters$School)/nrow(painters)
table(painters$Composition)/nrow(painters)
hist(table(painters$School))
hist(painters, table(painters$School))
hist(table(painters$School), painters$School)
hist(table(painters$Composition))
hist(painters$Composition)
pwd
cwd
ws
wd
getwd()
getwd()
getwd()
getwd()
library("knitr", lib.loc="~/R/win-library/3.1")
library("lattice", lib.loc="~/R/win-library/3.1")
setwd("~/Coursera/DataAnalysis/Reproducible Research/PeerAssess1")
setwd("~/Coursera/DataAnalysis/Reproducible Research/PeerAssess1/RepData_PeerAssessment1")
library("lattice", lib.loc="~/R/win-library/3.1")
fname <- unzip("activity.zip")
fname
data <- read.csv(fname)
dev.copy(png,file="MeanSteps.png", width=480, height=480)
plotdata <- aggregate(data$steps ~ data$date, FUN = sum)
avgdata <- data[complete.cases(data),]
meandata <- aggregate(avgdata$steps ~ avgdata$interval, FUN = mean)
meanVal <- meandata$'avgdata$interval'[meandata$'avgdata$steps' == max(meandata$'avgdata$steps')]
plotnames <- names(meandata)
plot(meandata,type='l', ylab="Step Interval", xlab = "Average steps per day", main="Average daily activity pattern")
sum(is.na(data[,1]))
missValData <- data
for(i in 1:nrow(missValData)){
if (is.na(missValData[i,1]))
missValData[i,1] <- meandata[[toString(missValData[i,3])]]
}
sum(is.na(missValData[,1]))
missValData <- data
summary(missValData)
data <- read.csv(fname, na.strings="NA")
sum(is.na(data[,1]))
missValData <- data
for(i in 1:nrow(missValData)){
if (is.na(missValData[i,1]))
missValData[i,1] <- meandata[[toString(missValData[i,3])]]
}
nrow(missValData)
dim(missValData)
sum(is.na(data[,1]))
missValData <- data
for(i in 0:nrow(missValData)){
if (is.na(missValData[i,1]))
missValData[i,1] <- meandata[[toString(missValData[i,3])]]
}
head(missValData)
for(i in 1:nrow(missValData)-1){
if (is.na(missValData[i,1]))
missValData[i,1] <- meandata[[toString(missValData[i,3])]]
}
for(i in 1:nrow(missValData)-1){
if (is.na(missValData[i,1]))
{
newVal <- meandata[[toString(missValData[i,3])]]
missValData[i,1] <- newVal
}
}
for(i in 1:nrow(missValData)){
if (is.na(missValData[i,1]))
{
newVal <- meandata[[toString(missValData[i,3])]]
missValData[i,1] <- newVal
}
}
missValData <- data
for(i in 1:nrow(missValData)){
if (is.na(missValData[i,1]))
{
newVal <- meandata[[toString(missValData[i,3])]]
missValData[i,1] <- newVal
}
}
is.na(missValData[i,17568])
is.na(missValData[17568,1])
is.na(missValData[17569,1])
is.na(missValData[17570,1])
missValData[17568,]
missValData[17569,]
missValData[17569,]
for(i in 1:17568){
if (is.na(missValData[i,1]))
{
newVal <- meandata[[toString(missValData[i,3])]]
missValData[i,1] <- newVal
}
}
for(i in 1:nrow(missValData)){
if (is.na(missValData[i,1]))
{
newVal <- meandata[[toString(missValData[i,3])]]
missValData[i,1] <- newVal
}
}
sum(is.na(missValData[,1]))
sum(is.na(data[,1]))
missValData <- data
for(i in 1:nrow(missValData)){
if (is.na(missValData[i,1]))
{
newVal <- meandata[[toString(missValData[i,3])]]
missValData[i,1] <- newVal
}
}
sum(is.na(missValData[,1]))
for(i in 1:nrow(missValData)){
if (is.na(missValData[i,1]))
{
newVal <- meandata[[toString(missValData[i,3])]]
print(newVal)
print(missValData[i,1])
missValData[i,1] <- newVal
}
}
head(meandata)
for(i in 1:nrow(missValData)){
if (is.na(missValData[i,1]))
{
print(missValData[i,3])
newVal <- meandata[[toString(missValData[i,3])]]
print(newVal)
print(missValData[i,1])
missValData[i,1] <- newVal
}
}
meandata[[0]]
meandata[["0"]]
meandata
names(meandata)
meandata[meandata$'avgdata$iterval' == missValData[1,3], meandata$'avgdata$steps']
missValData[1,3]
meandata[meandata$'avgdata$iterval' == 0, meandata$'avgdata$steps']
meandata[meandata$'avgdata$interval' == 0, meandata$'avgdata$steps']
meandata[meandata$'avgdata$interval' == 0, 2]
for(i in 1:nrow(missValData)){
if (is.na(missValData[i,1]))
{
missValData[i,1] <- meandata[meandata$'avgdata$iterval' == missValData[1,3], 2]
}
}
for(i in 1:nrow(missValData)){
if (is.na(missValData[i,1]))
{
missValData[i,1] <- meandata[meandata$Interval == missValData[1,3], meandata$Steps]
}
}
avgdata <- data[complete.cases(data),]
meandata <- aggregate(avgdata$steps ~ avgdata$interval, FUN = mean, cols=c("Interval", "Steps"))
meanVal <- meandata$'avgdata$interval'[meandata$'avgdata$steps' == max(meandata$'avgdata$steps')]
plotnames <- names(meandata)
plot(meandata,type='l', ylab="Step Interval", xlab = "Average steps per day", main="Average daily activity pattern")
sum(is.na(data[,1]))
missValData <- data
for(i in 1:nrow(missValData)){
if (is.na(missValData[i,1]))
{
missValData[i,1] <- meandata[meandata$Interval == missValData[1,3], meandata$Steps]
}
}
meandata[meandata$Interval == missValData[1,3], meandata$Steps]
meandata
names(meandata)
avgdata <- data[complete.cases(data),]
meandata <- aggregate(Steps = avgdata$steps ~ Interval = avgdata$interval, FUN = mean)
meanVal <- meandata$'avgdata$interval'[meandata$'avgdata$steps' == max(meandata$'avgdata$steps')]
plotnames <- names(meandata)
plot(meandata,type='l', ylab="Step Interval", xlab = "Average steps per day", main="Average daily activity pattern")
names(meandata)
avgdata <- data[complete.cases(data),]
meandata <- aggregate(Steps = avgdata$steps ~ Interval = avgdata$interval, FUN = mean)
meandata <- setNames(meandata, c("Interval", "Steps"))
avgdata <- data[complete.cases(data),]
meandata <- aggregate(avgdata$steps ~ avgdata$interval, FUN = mean)
meandata <- setNames(meandata, c("Interval", "Steps"))
names(meandata)
avgdata <- data[complete.cases(data),]
meandata <- aggregate(avgdata$steps ~ avgdata$interval, FUN = mean)
meandata <- setNames(meandata, c("Interval", "Steps"))
meanVal <- meandata$Interval[meandata$Steps == max(meandataSteps)]
plotnames <- names(meandata)
plot(meandata,type='l', ylab="Step Interval", xlab = "Average steps per day", main="Average daily activity pattern")
sum(is.na(data[,1]))
missValData <- data
for(i in 1:nrow(missValData)){
if (is.na(missValData[i,1]))
{
missValData[i,1] <- meandata[meandata$Interval == missValData[1,3], meandata$Steps]
}
}
for(i in 1:nrow(missValData)){
if (is.na(missValData[i,1]))
{
missValData[i,1] <- meandata[meandata$Interval == missValData[i,3], meandata$Steps]
}
}
names(meandata)
meandata$Interval
meandata$Steps
meandata[meandata$Interval == missValData[0,3], meandata$Steps]
meandata[meandata$Interval == missValData[0,3], 2]
meandata[meandata$Interval == missValData[1,3], 2]
meandata[meandata$Interval == missValData[1,3], meandata$Steps]
meandata[meandata$Interval == missValData[1,3], 2]
avgdata <- data[complete.cases(data),]
meandata <- aggregate(avgdata$steps ~ avgdata$interval, FUN = mean)
meandata <- setNames(meandata, c("Interval", "Steps"))
meanVal <- meandata$Interval[meandata$Steps == max(meandata$Steps)]
plotnames <- names(meandata)
plot(meandata,type='l', ylab="Step Interval", xlab = "Average steps per day", main="Average daily activity pattern")
sum(is.na(data[,1]))
missValData <- data
for(i in 1:nrow(missValData)){
if (is.na(missValData[i,1]))
{
missValData[i,1] <- meandata[meandata$Interval == missValData[i,3], meandata$Steps]
}
}
sum(is.na(data[,1]))
missValData <- data
for(i in 1:nrow(missValData)){
if (is.na(missValData[i,1]))
{
missValData[i,1] <- meandata[meandata$Interval == missValData[i,3],2]
}
}
sum(is.na(missValData[,1]))
